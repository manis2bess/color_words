namespace :load do

  desc "load 2013"
  task :load_2013 => :environment do
  	include CountryHelper

  	codes = ["AX","AF","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BQ","BA","BW","BV","BR","IO","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CW","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HK","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KP","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MO","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","SH","BL","KN","LC","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SX","SK","SI","SB","SO","ZA","GS","SS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VG","VI","WF","EH","YE","ZM","ZW"]

  	codes.each do |c|
  		get_country(2013,c)
  	end

  end

  desc "load country word"
  task :load_country_words => :environment do
  	include ColorHelper
    OpenSSL::SSL::VERIFY_PEER = OpenSSL::SSL::VERIFY_NONE

  	Country.where(year: 2013).each do |c|
  		puts "COUNTRY - #{c.country}"
  		c.words[0..5].each do |w|
  			w = normalize(w)
  			puts "QUERY - #{w}"
  			w.split(" ").each do |e|
  				color = nil
  				a = find_word(e)

  				if not a.nil?
  					color = a.color
  				end
  				puts "WORD - #{e} - #{color}"
  			end
  		end
  	end
  end

  desc "load country coords"
  task :load_country_coords => :environment do
  	year = 2013
  	coords = [[33,66,"AF"],[41,20,"AL"],[28,3,"DZ"],[-14.3333333,-170,"AS"],[42.5,1.5,"AD"],[-12.5,18.5,"AO"],[18.216667,-63.05,"AI"],[17.05,-61.8,"AG"],[-34,-64,"AR"],[40,45,"AM"],[12.5,-69.966667,"AW"],[-15.95,-5.7,"SH"],[-25,135,"AU"],[47.333333,13.333333,"AT"],[40.5,47.5,"AZ"],[24,-76,"BS"],[26,50.5,"BH"],[24,90,"BD"],[13.166667,-59.533333,"BB"],[53,28,"BY"],[50.833333,4,"BE"],[17.25,-88.75,"BZ"],[9.5,2.25,"BJ"],[32.333333,-64.75,"BM"],[27.5,90.5,"BT"],[-17,-65,"BO"],[12.2,-68.25,"BQ"],[44.25,17.833333,"BA"],[-22,24,"BW"],[-54.433333,3.4,"BV"],[-10,-55,"BR"],[-6,72,"IO"],[18.5,-64.5,"VG"],[4.5,114.666667,"BN"],[43,25,"BG"],[13,-2,"BF"],[22,98,"MM"],[-3.5,30,"BI"],[13,105,"KH"],[6,12,"CM"],[60,-96,"CA"],[16,-24,"CV"],[19.5,-80.666667,"KY"],[7,21,"CF"],[15,19,"TD"],[-30,-71,"CL"],[35,105,"CN"],[-10.5,105.666667,"CX"],[-12,96.833333,"CC"],[4,-72,"CO"],[-12.166667,44.25,"KM"],[-16.083333,-161.583333,"CK"],[10,-84,"CR"],[8,-5,"CI"],[45.166667,15.5,"HR"],[22,-79.5,"CU"],[12.166667,-69,"CW"],[35,33,"CY"],[49.75,15,"CZ"],[0,25,"CD"],[56,10,"DK"],[11.5,42.5,"DJ"],[15.5,-61.333333,"DM"],[19,-70.666667,"DO"],[-2,-77.5,"EC"],[27,30,"EG"],[13.833333,-88.916667,"SV"],[2,10,"GQ"],[15,39,"ER"],[59,26,"EE"],[8,38,"ET"],[-51.75,-59.166667,"FK"],[62,-7,"FO"],[5,152,"FM"],[-18,178,"FJ"],[64,26,"FI"],[46,2,"FR"],[4,-53,"GF"],[-15,-140,"PF"],[-43,67,"TF"],[-1,11.75,"GA"],[13.5,-15.5,"GM"],[31.425074,34.373398,"PS"],[41.999981,43.499905,"GE"],[51.5,10.5,"DE"],[8,-2,"GH"],[36.133333,-5.35,"GI"],[39,22,"GR"],[72,-40,"GL"],[12.116667,-61.666667,"GD"],[16.25,-61.583333,"GP"],[13.4444444,144.7366667,"GU"],[15.5,-90.25,"GT"],[49.583333,-2.333333,"GG"],[11,-10,"GN"],[12,-15,"GW"],[5,-59,"GY"],[19,-72.416667,"HT"],[-53,73,"HM"],[15,-86.5,"HN"],[22.25,114.166667,"HK"],[47,20,"HU"],[65,-18,"IS"],[20,77,"IN"],[-5,120,"ID"],[32,53,"IR"],[33,44,"IQ"],[53,-8,"IE"],[54.25,-4.5,"IM"],[31.5,34.75,"IL"],[42.833333,12.833333,"IT"],[18.25,-77.5,"JM"],[36,138,"JP"],[49.216667,-2.116667,"JE"],[31,36,"JO"],[48,68,"KZ"],[1,38,"KE"],[-5,-170,"KI"],[29.5,47.75,"KW"],[41,75,"KG"],[18,105,"LA"],[57,25,"LV"],[33.833333,35.833333,"LB"],[-29.5,28.25,"LS"],[6.5,-9.5,"LR"],[25,17,"LY"],[47.166667,9.533333,"LI"],[56,24,"LT"],[49.75,6.166667,"LU"],[22.157778,113.559722,"MO"],[41.833333,22,"MK"],[-20,47,"MG"],[-13.5,34,"MW"],[2.5,112.5,"MY"],[3.2,73,"MV"],[17,-4,"ML"],[35.916667,14.433333,"MT"],[10,167,"MH"],[14.666667,-61,"MQ"],[20,-12,"MR"],[-20.3,57.583333,"MU"],[-12.833333,45.166667,"YT"],[23,-102,"MX"],[47,29,"MD"],[43.733333,7.4,"MC"],[46,105,"MN"],[42.5,19.3,"ME"],[16.75,-62.2,"MS"],[32,-5,"MA"],[-18.25,35,"MZ"],[-22,17,"NA"],[-0.533333,166.916667,"NR"],[28,84,"NP"],[52.5,5.75,"NL"],[-21.5,165.5,"NC"],[-42,174,"NZ"],[13,-85,"NI"],[16,8,"NE"],[10,8,"NG"],[-19.033333,-169.866667,"NU"],[-29.033333,167.95,"NF"],[40,127,"KP"],[16,146,"MP"],[62,10,"NO"],[21,57,"OM"],[30,70,"PK"],[6,134,"PW"],[9,-80,"PA"],[-6,147,"PG"],[-22.993333,-57.996389,"PY"],[-10,-76,"PE"],[13,122,"PH"],[-25.066667,-130.1,"PN"],[52,20,"PL"],[39.5,-8,"PT"],[18.2482882,-66.4998941,"PR"],[25.5,51.25,"QA"],[-1,15,"CG"],[-21.1,55.6,"RE"],[46,25,"RO"],[60,100,"RU"],[-2,30,"RW"],[17.9,-62.833333,"BL"],[17.333333,-62.75,"KN"],[13.883333,-60.966667,"LC"],[18.075,-63.05833,"MF"],[46.833333,-56.333333,"PM"],[13.083333,-61.2,"VC"],[-13.803096,-172.178309,"WS"],[43.933333,12.416667,"SM"],[1,7,"ST"],[25,45,"SA"],[14,-14,"SN"],[44,21,"RS"],[-4.583333,55.666667,"SC"],[8.5,-11.5,"SL"],[1.366667,103.8,"SG"],[18.04167,-63.06667,"SX"],[48.666667,19.5,"SK"],[46.25,15.166667,"SI"],[-8,159,"SB"],[6,48,"SO"],[-30,26,"ZA"],[-56,-33,"GS"],[37,127.5,"KR"],[8,30,"SS"],[40,-4,"ES"],[7,81,"LK"],[16,30,"SD"],[4,-56,"SR"],[78,20,"SJ"],[-26.5,31.5,"SZ"],[62,15,"SE"],[47,8,"CH"],[35,38,"SY"],[24,121,"TW"],[39,71,"TJ"],[-6,35,"TZ"],[15,100,"TH"],[-8.833333,125.75,"TL"],[8,1.166667,"TG"],[-9,-171.75,"TK"],[-20,-175,"TO"],[11,-61,"TT"],[34,9,"TN"],[39.059012,34.911546,"TR"],[40,60,"TM"],[21.733333,-71.583333,"TC"],[-8,178,"TV"],[2,33,"UG"],[49,32,"UA"],[24,54,"AE"],[54,-4,"GB"],[39.828175,-98.5795,"US"],[-33,-56,"UY"],[5.8811111,-162.0725,"UM"],[18.3482891,-64.9834807,"VI"],[41.707542,63.84911,"UZ"],[-16,167,"VU"],[41.9,12.45,"VA"],[8,-66,"VE"],[16.166667,107.833333,"VN"],[-13.3,-176.2,"WF"],[31.666667,35.25,"PS"],[25,-13.5,"EH"],[15.5,47.5,"YE"],[-15,30,"ZM"],[-19,29,"ZW"]]
  	coords.each do |c|
  		co = Country.find_by(country: c[2], year: year)
  		if !co.nil?
  			puts "#{c}"
  			co.y = -c[0]
  			co.x = c[1]
  			co.save
  		end
  	end
  end
 end